The dsPIC draws 70mA at 20MIPS at 3.3v and 38mA at 10MIPS at 3.3v
interpolated for 14.74MIPS gives
32 * 0.474 = 15.168
15.168 + 38mA = 53.168mA while running full steam (no idle). 175.5mW

The dsPIC draws 40mA at 20MIPS at 3.3v and 21mA at 10MIPS at 3.3v during idle.
interpolated for 14.74MIPS gives
19 * 0.474 = 9.006
9.006 + 21mA = 30.006mA while idle. 99.02mW

Add in LED power draw will be estimated at 0.014mA at 3.3v (4 LEDs, each in series with a 1K resistor running full duty cycle)
This adds 46.2mW to power draw with LEDs on. Not including balance drive because they aren't on all the time.

Add in FTDI chip. 8mA when active so will assume always active. 26.4mW.

Total max power draw from 3.3v digital rail is 248mW worst case.

Total min power draw from 3.3v rail (CPU IDLE and LEDs off) is 125.4mW

A 4S 3.7v nominal 2.6AH battery has 38.48 watt hours of energy.

Using a buck converted to power the 3.3v digital rail with worst case 85% efficiency. (multiply all power inputs by 1.1765)

Worst case is now 291.772mW

Best case is now 147.533mW

All based on the dsPIC's MAX current draw, not typical current draw.

Worst case run time with no load on output (system not in deep sleep) 131.88 hours or 5.495 days

Best case run time with no load on output is (system not in deep sleep but CPU idle and LEDs off) 260.82 hours or 10.868 days

Assuming a CPU and LED duty cycle of 85%, the system can be powered on with no load for 164.115 hours or 6.84 days

This can be improved a lot if we use a 32.768 khz crystal to run all timers and analog clocks to periodically wake the CPU. Not sure if this is possible past timer 1, as it might be the only system timer that supports an external clock input.

Can't do that because those aux crystal pins are used by UART1

If instead we change the internal clock to 1.8MIPS then we could reduce best case to 45.8mW (Including FTDI chip which isn't needed unless plugged into USB so will exclude) 19.4mW
With clock switching so that the main clock is only 8x during active CPU states, we can reduce the total power draw by a about 4 times. The CPU only needs to be fully active during times of charge regulation.

Changing the firmware to only run the CPU about 1/10 of every second we can have total power draw at about ~46.64mW average.

Our runtime is now 825 hours, or 34.38 days. This is with the power switch turned on and the system in an active state of monitoring but no power draw on it's output.
Realistically, the system would time out or would be turned of and the chip would deactivate the power mosfets powering all active circuitry reducing the power draw down to almost nothing.